
folder_names = {
% - Daisey
% '161028_12_24_05',
% '161028_12_32_52',
% '161028_12_46_32',
% '161028_13_10_30',
% '161028_13_24_44',

% - Donald
% % '161104_12_08_22', -->'161104_12_08_22 FunctAcq_ANALYSEHUGEPATCHESFILE28GB'
% '161104_12_30_08',
% '161124_17_06_57',
% '161124_17_25_24',
% '161124_17_36_15',
% '161202_11_34_59',
% '161202_11_59_24',
% '161202_12_21_36',
% '170715_17_29_14',
% '170715_17_49_20',

% - Melania
% % '161213_15_14_46',
% % '161213_15_49_29',
% % '161213_16_27_20',
% % '161213_16_47_53',
% % '161213_17_07_54',
% % '161213_17_48_00',
% % '161213_18_10_20',
% % '161214_15_04_10',
% % '161214_15_26_36',
% % '161214_16_07_18',
% % '161214_16_27_06',
% % '161214_16_44_56',
% % '161214_17_05_20',
% % '161214_17_23_01',
% '161215_14_49_14',
% '161215_15_10_38',
% '161215_15_34_21',
% '161215_15_58_52',
% '161215_16_20_56',
% '161215_16_45_53',
% % '161221_15_32_48',
% % '161221_15_49_37',
% % '161221_16_11_44',
% '161221_17_15_28',
% '161221_17_31_33',
% '161221_17_46_20',
% '161221_18_01_54',
% '161221_18_17_11',
% '161222_14_16_20',
% '161222_15_10_05',
% '161222_15_29_22',
% '161222_15_45_39',
% '161222_16_18_47',

% - Duran Duran
% '170711_13_47_08',
% '170711_14_11_35',
% '170711_14_32_55',
% '170711_14_55_45',
% '170711_15_03_27',
% '170711_15_26_12',
% '170711_15_50_58',
% '170711_16_14_57',
% '170711_17_47_08',
% '170711_18_12_32',
% '170711_18_33_41',
% '170711_19_02_06',
% '170711_19_22_49',
% '170711_19_42_29',

% - Theresa
% '170712_15_35_44',
% '170712_16_03_58',
% '170712_16_33_32',
% '170712_17_04_21',
% '170712_17_38_33',
% '170712_18_06_44',
% '170712_18_23_27',
% '170712_18_38_26',
% '170712_19_12_59',
% '170712_19_42_11',
% '170712_20_00_46',
% '170712_20_15_37',
% '170712_20_29_03',
% '170712_20_42_45',
% '170712_20_55_51',
% '170712_21_18_21',
% '170712_21_31_26',
% '170712_21_45_07',
% '171003_14_05_44',
% '171003_14_36_44',
% '171003_15_08_27',
% '171003_15_26_32',
% '171003_15_44_50',

'170713_16_08_14'

% - Boris
% '170713_15_49_44',
% % '170713_16_08_14',
% '170713_16_26_21',
% '170713_16_44_46',
% '170713_16_58_38',
% '170713_17_24_15',
% '170713_17_37_52',
% '170713_18_58_00',
% '170713_19_17_00',
% '170713_19_31_16',
% '170713_19_50_07',
% '170713_20_03_49',
% '170713_20_21_57',
% '170713_20_37_21',

% - Buddy
% '170714_19_09_41',
% '170714_19_28_17',
% '170714_19_41_32',
% '170714_21_04_44',
% '170714_21_21_03',
% '170714_21_34_11',
% '170714_21_47_08',
% '170714_22_11_04',
% '170714_22_26_27',
% '170714_22_43_31',
% '170714_22_59_41',
% '170630_13_17_44',
% '170630_13_26_18',
% '170630_13_41_34',
% '170630_14_01_59',
% '170630_14_11_57',

% - Nigel
% '171212_13_36_10',
% % '171212_14_11_09',
% '171212_14_25_30',
% '171212_15_41_30',
% '171212_15_59_19',
% % '171212_16_16_46',
% '171212_16_19_37',
% % '171212_16_42_31',

% - Francois
% % '171201_11_41_22',
% % '171201_11_53_57',
% % '180130_14_21_41',
% % '180130_14_44_27',
% % '180130_15_11_06',
% % '180130_15_28_20',
% % '180130_15_52_45',
% % '180130_16_11_02',
% % '180131_14_58_58',
% '180131_15_21_48',
% % '180131_15_37_10',
% % '180116_15_37_12',
% % '180116_16_11_17',
% '180320_15_41_17',
% '180320_16_08_18',
% '180320_16_25_10',
% '180320_16_37_27',

% - Silvio
% '171208_12_05_08',
% '171211_16_18_24',
% '171211_16_51_28',

};

for ij = 1:length(folder_names)
    clearvars -except folder_names ij
    
    folder_name = char(folder_names(ij))
    
    path_data = ['/Volumes/silverlab-general/Hana/', folder_name ,' FunctAcq'];
    path_functional = [path_data, '/Functional_Data'];
    path_speed = [path_data '/Speed_Data'];
    %path_save = ['/Volumes/Data/Data_raw/' folder_name];
    path_save = ['/Users/sadra/Desktop/MFB/Data_raw/' folder_name];
    if ~exist(path_save); mkdir(path_save); end
    
    copyfile([path_data '/Experiment Header.ini'], path_save);
    copyfile([path_data '/Single cycle relative times.txt'], path_save);
    copyfile([path_data '/Zplane_Pockels_Values.dat'], path_save);
    copyfile([path_data '/Normalised_ROI.dat'], path_save);
    copyfile([path_data '/ROI.dat'], path_save);
    if exist(path_speed); copyfile(path_speed, [path_save '/Speed_data']); end
    
    % - reading header info
    cd(path_data);
    headerInfo = ini2struct('Experiment Header.ini');
    Ntr = str2num(headerInfo.globalParameters.numberoftrials);
    Nroi = str2num(headerInfo.globalParameters.numberofpoi);
    Npt = str2num(headerInfo.globalParameters.numberofcycles);

    % - reading functional data 
    if exist(path_functional)
        cd(path_functional);
        allF_green = zeros(Ntr, Nroi, Npt);
        'ROI #'
        for j = 1:Nroi
            if mod(j,10) == 0; j
            end
            for i = 1:Ntr
                % green channel
                mydG = load(strcat('ROI-',num2str(j,'%03i'), '_POI_Dwell-4.0us_ChB_Trial-',num2str(i,'%02i'),'.dat'));
                allF_green(i,j,:) = mydG;
            end
        end

        cd(path_save);
        save('allF_green.mat', 'allF_green');
    end
end